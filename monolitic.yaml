heat_template_version: 2016-04-08
resources:
  floating_ip:
    type: OS::Nova::FloatingIP
    properties:
      pool: floating_net

  inst1:
    type: OS::Nova::Server
    properties:
      flavor: m1.small
      image: CentOS 7
      key_name: testo
      networks:
        - network: 1f2a91f7-e3c1-48c9-b1fb-320dface898a
      user_data: |
        #!/bin/bash
        yum install https://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-8.noarch.rpm -y
        yum install httpd mariadb-server php-fpm php-mysqlphp-xml php git -y

        cd /var/www/html
        git clone https://github.com/stack-this/hunter-price.git
        cd hunter-price

        # Install composer
        php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
        php -r "if (hash_file('SHA384', 'composer-setup.php') === 'e115a8dc7871f15d853148a7fbac7da27d6c0030b848d9b3dc09e2a0388afed865e6a3d6b3c0fad45c48e2b5fc1196ae') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
        php composer-setup.php
        php -r "unlink('composer-setup.php');"
        echo date.timezone="America/Mexico_City">> /etc/php.ini
        php composer.phar update
        php composer.phar install

        cp deploy/hunterprice.conf /etc/httpd/conf.d/
        systemctl enable httpd
        systemctl start httpd

        systemctl enable php-fpm
        systemctl start php-fpm

        systemctl enbable mariadb
        systemctl start mariadb

        mysql -sfu root << EOF
        UPDATE mysql.user SET Password=PASSWORD('mariadb0.') WHERE User='root';
        DELETE FROM mysql.user WHERE User='';
        DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1');
        DROP DATABASE IF EXISTS test;
        DELETE FROM mysql.db WHERE Db='test' OR Db='test\\_%';
        FLUSH PRIVILEGES;
        EOF

        php app/console doctrine:database:create
        php app/console doctrine:schema:update --force

  association:
    type: OS::Nova::FloatingIPAssociation
    properties:
      floating_ip: { get_resource: floating_ip }
      server_id: { get_resource: inst1 }
